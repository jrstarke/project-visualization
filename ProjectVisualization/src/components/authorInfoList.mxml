<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" title="Authors" titleStyleName="authorStatusStyle" creationComplete="initParentProject()">
	<mx:Style>
    	.authorStatusStyle {
        	fontWeight: bold;
            color: white;
     	}
     	
        .authorNameStyle	{
        	fontWeight: bold;
        }
	</mx:Style>
	
	<mx:Script>
		<![CDATA[
			import mx.rpc.http.HTTPService;
			import mx.collections.ArrayCollection;
			import mx.containers.HBox;
			import mx.controls.Label;
			import mx.rpc.events.ResultEvent;
			import com.adobe.serialization.json.JSON;
			
			private var getSrvAuthors:HTTPService;
			//create a list of the current authors in the main list
			private var authorList:Array = new Array();
			
			private var getParentProject:ProjectVisualizaton = new ProjectVisualizaton();
			
			//function to gain easy access to the parent class
			private function initParentProject():void
			{
				getParentProject =  this.parent.parent.parent.parent as ProjectVisualizaton;	
			}
			
			//add authors to author list
			public function addAuthorsToList(startDate:String, endDate:String):void
			{
				var numOfTopAuth:int = 17;

				getSrvAuthors = new HTTPService();
				getSrvAuthors.url = "http://localhost:8000/topauthors/" + startDate + "/" + endDate + "/" + numOfTopAuth + "/"; 
				getSrvAuthors.resultFormat = "text";
				getSrvAuthors.addEventListener("result", processAuthorList);
				
				if(endDate != null){
					getSrvAuthors.send();
					//debugLabel.text = getSrvEvents.url;
   				}	
			}
			
			private function processAuthorList(event:ResultEvent):void
			{
				//clear the list
				removeAuthorsFromList();
				
				var decoded:Object = JSON.decode(event.result.toString());
				var authorDictionary:Array = decoded as Array;
			
				authorList = authorDictionary;
					
				//authorList.addItemAt(author, 0);
				var i:int;
				for(i=0; i<authorList.length; i++){
					var authorHBox:HBox = new HBox();
					var authorNameLabel:Label = new Label();
			
					authorHBox.name = authorList[i].author + "HBox";
					authorNameLabel.name = + authorList[i].author + "Label";
					
					authorNameLabel.text = "" + authorList[i].author_name;
					
					authorHBox.setStyle("border", "solid");
					authorNameLabel.styleName = "authorNameStyle";
				
					authorHBox.addChild(authorNameLabel);
					this.addChildAt(authorHBox, 0);	
				}	
			}
			
			//remove author from list if there that author no longer exists in the event list
			public function removeAuthorsFromList():void
			{
				this.removeAllChildren();
			}
		]]>
	</mx:Script>
</mx:Panel>
